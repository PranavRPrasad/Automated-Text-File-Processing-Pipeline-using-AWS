{"ast":null,"code":"var _jsxFileName = \"/Users/pranavs/Documents/React/Projects/file-upload-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { S3Client, PutObjectCommand } from '@aws-sdk/client-s3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3Uploader = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [textInput, setTextInput] = useState('');\n  const [apiResponse, setApiResponse] = useState(null); // State to store API response\n\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleTextChange = e => {\n    setTextInput(e.target.value);\n  };\n  const uploadFile = async () => {\n    if (!selectedFile) return;\n    setUploading(true);\n    const s3 = new S3Client({\n      region: 'us-west-1',\n      credentials: {\n        accessKeyId: 'AKIA4MTWJM2N7ZP6DB5M',\n        secretAccessKey: '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'\n      }\n    });\n    const params = {\n      Bucket: 'pranav-file-upload-storage',\n      Key: selectedFile.name,\n      Body: selectedFile\n    };\n    try {\n      const command = new PutObjectCommand(params);\n      const response = await s3.send(command);\n      console.log('File uploaded successfully:', response);\n      const apiUrl = 'https://8sewjemv47.execute-api.us-west-1.amazonaws.com/test/file';\n      const apiParams = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          textInput: textInput,\n          s3Url: `https://pranav-file-upload-storage.s3-us-west-1.amazonaws.com/${selectedFile.name}` // Include bucket name and filename in the S3 URL\n        })\n      };\n\n      // Fetch API and store the response in state\n      const responseFromApi = await fetch(apiUrl, apiParams);\n      const responseData = await responseFromApi.json();\n      setApiResponse(responseData);\n    } catch (error) {\n      console.error('Upload failed:', error);\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Text input: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: textInput,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      disabled: uploading,\n      children: uploading ? 'Uploading...' : 'Upload File'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Progress: \", uploadProgress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 36\n    }, this), apiResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"API Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(apiResponse, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(S3Uploader, \"hnPJLzxDz7KAyM8HEgBGjZx0+K8=\");\n_c = S3Uploader;\nexport default S3Uploader;\nvar _c;\n$RefreshReg$(_c, \"S3Uploader\");","map":{"version":3,"names":["React","useState","S3Client","PutObjectCommand","jsxDEV","_jsxDEV","S3Uploader","_s","selectedFile","setSelectedFile","uploading","setUploading","uploadProgress","setUploadProgress","textInput","setTextInput","apiResponse","setApiResponse","handleFileChange","e","target","files","handleTextChange","value","uploadFile","s3","region","credentials","accessKeyId","secretAccessKey","params","Bucket","Key","name","Body","command","response","send","console","log","apiUrl","apiParams","method","headers","body","JSON","stringify","s3Url","responseFromApi","fetch","responseData","json","error","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/pranavs/Documents/React/Projects/file-upload-system/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { S3Client, PutObjectCommand } from '@aws-sdk/client-s3';\n\nconst S3Uploader = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [uploading, setUploading] = useState(false);\n    const [uploadProgress, setUploadProgress] = useState(0);\n    const [textInput, setTextInput] = useState('');\n    const [apiResponse, setApiResponse] = useState(null); // State to store API response\n\n    const handleFileChange = (e) => {\n        setSelectedFile(e.target.files[0]);\n    };\n\n    const handleTextChange = (e) => {\n        setTextInput(e.target.value);\n    };\n\n    const uploadFile = async () => {\n        if (!selectedFile) return;\n\n        setUploading(true);\n\n        const s3 = new S3Client({\n            region: 'us-west-1',\n            credentials: {\n                accessKeyId: 'AKIA4MTWJM2N7ZP6DB5M',\n                secretAccessKey: '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'\n            }\n        });\n\n        const params = {\n            Bucket: 'pranav-file-upload-storage',\n            Key: selectedFile.name,\n            Body: selectedFile,\n        };\n\n        try {\n            const command = new PutObjectCommand(params);\n            const response = await s3.send(command);\n            console.log('File uploaded successfully:', response);\n\n            const apiUrl = 'https://8sewjemv47.execute-api.us-west-1.amazonaws.com/test/file';\n            const apiParams = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    textInput: textInput,\n                    s3Url: `https://pranav-file-upload-storage.s3-us-west-1.amazonaws.com/${selectedFile.name}` // Include bucket name and filename in the S3 URL\n                })\n            };\n\n            // Fetch API and store the response in state\n            const responseFromApi = await fetch(apiUrl, apiParams);\n            const responseData = await responseFromApi.json();\n            setApiResponse(responseData);\n\n        } catch (error) {\n            console.error('Upload failed:', error);\n        } finally {\n            setUploading(false);\n        }\n    };\n    \n    return (\n        <div>\n            <label>Text input: <input type='text' value={textInput} onChange={handleTextChange} /></label>\n            <input type=\"file\" onChange={handleFileChange} />\n            <button onClick={uploadFile} disabled={uploading}>\n                {uploading ? 'Uploading...' : 'Upload File'}\n            </button>\n            {uploadProgress > 0 && <div>Progress: {uploadProgress}%</div>}\n            {/* Display the API response */}\n            {apiResponse && (\n                <div>\n                    <h2>API Response:</h2>\n                    <pre>{JSON.stringify(apiResponse, null, 2)}</pre>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default S3Uploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}