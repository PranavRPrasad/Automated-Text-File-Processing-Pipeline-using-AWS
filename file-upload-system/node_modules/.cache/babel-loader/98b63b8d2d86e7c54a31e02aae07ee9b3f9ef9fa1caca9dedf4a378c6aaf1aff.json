{"ast":null,"code":"var _jsxFileName = \"/Users/pranavs/Documents/React/Projects/file-upload-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { S3Client, PutObjectCommand } from '@aws-sdk/client-s3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3Uploader = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [textInput, setTextInput] = useState('');\n  const [apiResponse, setApiResponse] = useState(null); // State to store API response\n\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleTextChange = e => {\n    setTextInput(e.target.value);\n  };\n  const uploadFile = async () => {\n    if (!selectedFile) return;\n    setUploading(true);\n    const s3 = new S3Client({\n      region: 'us-west-1',\n      credentials: {\n        accessKeyId: 'AKIA4MTWJM2N7ZP6DB5M',\n        secretAccessKey: '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'\n      }\n    });\n    const params = {\n      Bucket: 'pranav-file-upload-storage',\n      Key: selectedFile.name,\n      Body: selectedFile\n    };\n    try {\n      const command = new PutObjectCommand(params);\n      const response = await s3.send(command);\n      console.log('File uploaded successfully:', response);\n      const apiUrl = 'https://8sewjemv47.execute-api.us-west-1.amazonaws.com/test/file';\n      const apiParams = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input_text: textInput,\n          input_file_path: `pranav-file-upload-storage/${selectedFile.name}` // Include bucket name and filename in the S3 URL\n        })\n      };\n\n      // Fetch API and store the response in state\n      const responseFromApi = await fetch(apiUrl, apiParams);\n      const responseData = await responseFromApi.json();\n      setApiResponse(responseData);\n    } catch (error) {\n      console.error('Upload failed:', error);\n    } finally {\n      setUploading(false);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <div style={{ backgroundColor: 'black', color: 'white', textAlign: 'center'}}>\n    //     <label>Text input: <input type='text' value={textInput} onChange={handleTextChange} /></label><br /><br />\n    //     <input type=\"file\" required onChange={handleFileChange} /><br /><br />\n    //     <button onClick={uploadFile} disabled={uploading}>\n    //         {uploading ? 'Uploading...' : 'Submit'}\n    //     </button>\n    //     {uploadProgress > 0 && <div>Progress: {uploadProgress}%</div>}\n    //     {/* Display the API response */}\n    //     {apiResponse && (\n    //         <div>\n    //             {/* <h2>API Response:</h2>\n    //             <pre>{JSON.stringify(apiResponse, null, 2)}</pre> */}\n    //             <p>File submitted successfully</p>\n    //         </div>\n    //     )}\n    // </div>\n    // <div className=\"container\">\n    //     <label style={{ color: 'white' }}>Text input: <input type='text' value={textInput} onChange={handleTextChange} style={{ color: 'black' }} /></label>\n    //     <br />\n    //     <label style={{ color: 'white' }}>File input: <input type=\"file\" required onChange={handleFileChange} style={{ marginBottom: '20px' }} /></label>\n    //     <br />\n    //     <button onClick={uploadFile} disabled={uploading}>\n    //         {uploading ? 'Uploading...' : 'Submit'}\n    //     </button>\n    //     {uploadProgress > 0 && <div style={{ marginTop: '20px' }}>Progress: {uploadProgress}%</div>}\n    //     {/* Display the API response */}\n    //     {apiResponse && (\n    //         <div style={{ marginTop: '20px' }}>\n    //             <p style={{ color: 'white' }}>File submitted successfully</p>\n    //         </div>\n    //     )}\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Text input:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: textInput,\n          onChange: handleTextChange,\n          style: {\n            color: 'black'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: '10px'\n          },\n          children: \"File input:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          required: true,\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadFile,\n        disabled: uploading,\n        children: uploading ? 'Uploading...' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [\"Progress: \", uploadProgress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 36\n      }, this), apiResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'white'\n          },\n          children: \"File submitted successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(S3Uploader, \"hnPJLzxDz7KAyM8HEgBGjZx0+K8=\");\n_c = S3Uploader;\nexport default S3Uploader;\nvar _c;\n$RefreshReg$(_c, \"S3Uploader\");","map":{"version":3,"names":["React","useState","S3Client","PutObjectCommand","jsxDEV","_jsxDEV","S3Uploader","_s","selectedFile","setSelectedFile","uploading","setUploading","uploadProgress","setUploadProgress","textInput","setTextInput","apiResponse","setApiResponse","handleFileChange","e","target","files","handleTextChange","value","uploadFile","s3","region","credentials","accessKeyId","secretAccessKey","params","Bucket","Key","name","Body","command","response","send","console","log","apiUrl","apiParams","method","headers","body","JSON","stringify","input_text","input_file_path","responseFromApi","fetch","responseData","json","error","className","children","style","color","marginBottom","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","onClick","disabled","marginTop","_c","$RefreshReg$"],"sources":["/Users/pranavs/Documents/React/Projects/file-upload-system/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { S3Client, PutObjectCommand } from '@aws-sdk/client-s3';\n\nconst S3Uploader = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [uploading, setUploading] = useState(false);\n    const [uploadProgress, setUploadProgress] = useState(0);\n    const [textInput, setTextInput] = useState('');\n    const [apiResponse, setApiResponse] = useState(null); // State to store API response\n\n    const handleFileChange = (e) => {\n        setSelectedFile(e.target.files[0]);\n    };\n\n    const handleTextChange = (e) => {\n        setTextInput(e.target.value);\n    };\n\n    const uploadFile = async () => {\n        if (!selectedFile) return;\n\n        setUploading(true);\n\n        const s3 = new S3Client({\n            region: 'us-west-1',\n            credentials: {\n                accessKeyId: 'AKIA4MTWJM2N7ZP6DB5M',\n                secretAccessKey: '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'\n            }\n        });\n\n        const params = {\n            Bucket: 'pranav-file-upload-storage',\n            Key: selectedFile.name,\n            Body: selectedFile,\n        };\n\n        try {\n            const command = new PutObjectCommand(params);\n            const response = await s3.send(command);\n            console.log('File uploaded successfully:', response);\n\n            const apiUrl = 'https://8sewjemv47.execute-api.us-west-1.amazonaws.com/test/file';\n            const apiParams = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    input_text: textInput,\n                    input_file_path: `pranav-file-upload-storage/${selectedFile.name}` // Include bucket name and filename in the S3 URL\n                })\n            };\n\n            // Fetch API and store the response in state\n            const responseFromApi = await fetch(apiUrl, apiParams);\n            const responseData = await responseFromApi.json();\n            setApiResponse(responseData);\n\n        } catch (error) {\n            console.error('Upload failed:', error);\n        } finally {\n            setUploading(false);\n        }\n    };\n\n    return (\n        // <div style={{ backgroundColor: 'black', color: 'white', textAlign: 'center'}}>\n        //     <label>Text input: <input type='text' value={textInput} onChange={handleTextChange} /></label><br /><br />\n        //     <input type=\"file\" required onChange={handleFileChange} /><br /><br />\n        //     <button onClick={uploadFile} disabled={uploading}>\n        //         {uploading ? 'Uploading...' : 'Submit'}\n        //     </button>\n        //     {uploadProgress > 0 && <div>Progress: {uploadProgress}%</div>}\n        //     {/* Display the API response */}\n        //     {apiResponse && (\n        //         <div>\n        //             {/* <h2>API Response:</h2>\n        //             <pre>{JSON.stringify(apiResponse, null, 2)}</pre> */}\n        //             <p>File submitted successfully</p>\n        //         </div>\n        //     )}\n        // </div>\n\n        // <div className=\"container\">\n        //     <label style={{ color: 'white' }}>Text input: <input type='text' value={textInput} onChange={handleTextChange} style={{ color: 'black' }} /></label>\n        //     <br />\n        //     <label style={{ color: 'white' }}>File input: <input type=\"file\" required onChange={handleFileChange} style={{ marginBottom: '20px' }} /></label>\n        //     <br />\n        //     <button onClick={uploadFile} disabled={uploading}>\n        //         {uploading ? 'Uploading...' : 'Submit'}\n        //     </button>\n        //     {uploadProgress > 0 && <div style={{ marginTop: '20px' }}>Progress: {uploadProgress}%</div>}\n        //     {/* Display the API response */}\n        //     {apiResponse && (\n        //         <div style={{ marginTop: '20px' }}>\n        //             <p style={{ color: 'white' }}>File submitted successfully</p>\n        //         </div>\n        //     )}\n        // </div>\n\n        <div className=\"container\">\n            <div style={{ color: 'white', marginBottom: '20px' }}>\n                <label style={{ marginRight: '10px' }}>Text input:</label>\n                <input type='text' value={textInput} onChange={handleTextChange} style={{ color: 'black' }} />\n            </div>\n            <div style={{ color: 'white', marginBottom: '20px' }}>\n                <label style={{ marginRight: '10px' }}>File input:</label>\n                <input type=\"file\" required onChange={handleFileChange} />\n            </div>\n            <button onClick={uploadFile} disabled={uploading}>\n                {uploading ? 'Uploading...' : 'Submit'}\n            </button>\n            {uploadProgress > 0 && <div style={{ marginTop: '20px' }}>Progress: {uploadProgress}%</div>}\n            {/* Display the API response */}\n            {apiResponse && (\n                <div style={{ marginTop: '20px' }}>\n                    <p style={{ color: 'white' }}>File submitted successfully</p>\n                </div>\n            )}\n        </div>\n\n\n    );\n};\n\nexport default S3Uploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}