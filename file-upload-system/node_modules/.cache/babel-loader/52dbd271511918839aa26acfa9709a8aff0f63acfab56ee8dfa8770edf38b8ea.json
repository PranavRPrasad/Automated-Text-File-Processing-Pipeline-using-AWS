{"ast":null,"code":"var _jsxFileName = \"/Users/pranavs/Documents/React/Projects/file-upload-system/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { S3Client, PutObjectCommand } from '@aws-sdk/client-s3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3Uploader = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [textInput, setTextInput] = useState('');\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleTextChange = e => {\n    setTextInput(e.target.value);\n  };\n  const uploadFile = async () => {\n    if (!selectedFile) return;\n    setUploading(true);\n    const s3 = new S3Client({\n      region: 'us-west-1',\n      credentials: {\n        accessKeyId: 'AKIA4MTWJM2N7ZP6DB5M',\n        secretAccessKey: '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'\n      }\n    });\n    const params = {\n      Bucket: 'pranav-file-upload-storage',\n      Key: selectedFile.name,\n      Body: selectedFile\n    };\n    try {\n      const command = new PutObjectCommand(params);\n      const response = await s3.send(command);\n      console.log('File uploaded successfully:', response);\n      const apiUrl = 'https://yggobki560.execute-api.us-west-1.amazonaws.com/test/file';\n      const apiParams = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          textInput: textInput,\n          s3Url: response.Location\n        })\n      };\n      await fetch(apiUrl, apiParams);\n    } catch (error) {\n      console.error('Upload failed:', error);\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Text input: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: textInput,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      disabled: uploading,\n      children: uploading ? 'Uploading...' : 'Upload File'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Progress: \", uploadProgress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(S3Uploader, \"2Vo5ztJHhBY4TiIuQg51V4JZ+Qg=\");\n_c = S3Uploader;\nexport default S3Uploader;\nvar _c;\n$RefreshReg$(_c, \"S3Uploader\");","map":{"version":3,"names":["React","useState","S3Client","PutObjectCommand","jsxDEV","_jsxDEV","S3Uploader","_s","selectedFile","setSelectedFile","uploading","setUploading","uploadProgress","setUploadProgress","textInput","setTextInput","handleFileChange","e","target","files","handleTextChange","value","uploadFile","s3","region","credentials","accessKeyId","secretAccessKey","params","Bucket","Key","name","Body","command","response","send","console","log","apiUrl","apiParams","method","headers","body","JSON","stringify","s3Url","Location","fetch","error","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/pranavs/Documents/React/Projects/file-upload-system/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { S3Client, PutObjectCommand } from '@aws-sdk/client-s3';\n\nconst S3Uploader = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [uploading, setUploading] = useState(false);\n    const [uploadProgress, setUploadProgress] = useState(0);\n    const [textInput, setTextInput] = useState('');\n\n    const handleFileChange = (e) => {\n        setSelectedFile(e.target.files[0]);\n    };\n\n    const handleTextChange = (e) => {\n        setTextInput(e.target.value);\n    };\n\n    const uploadFile = async () => {\n        if (!selectedFile) return;\n\n        setUploading(true);\n\n        const s3 = new S3Client({\n            region: 'us-west-1',\n            credentials: {\n                accessKeyId: 'AKIA4MTWJM2N7ZP6DB5M',\n                secretAccessKey: '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'\n            }\n        });\n\n        const params = {\n            Bucket: 'pranav-file-upload-storage',\n            Key: selectedFile.name,\n            Body: selectedFile,\n        };\n\n        try {\n            const command = new PutObjectCommand(params);\n            const response = await s3.send(command);\n            console.log('File uploaded successfully:', response);\n\n            const apiUrl = 'https://yggobki560.execute-api.us-west-1.amazonaws.com/test/file';\n            const apiParams = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    textInput: textInput,\n                    s3Url: response.Location\n                })\n            };\n            await fetch(apiUrl, apiParams);\n        } catch (error) {\n            console.error('Upload failed:', error);\n        } finally {\n            setUploading(false);\n        }\n    };\n    \n    return (\n        <div>\n            <label>Text input: <input type='text' value={textInput} onChange={handleTextChange} /></label>\n            <input type=\"file\" onChange={handleFileChange} />\n            <button onClick={uploadFile} disabled={uploading}>\n                {uploading ? 'Uploading...' : 'Upload File'}\n            </button>\n            {uploadProgress > 0 && <div>Progress: {uploadProgress}%</div>}\n        </div>\n    );\n};\n\nexport default S3Uploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}